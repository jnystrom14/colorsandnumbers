require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Code is not reloaded between requests.
  config.enable_reloading = false

  # Eager load code on boot for better performance and memory savings.
  config.eager_load = true

  # Full error reports are disabled.
  config.consider_all_requests_local = false

  # Enable caching and set far‐future HTTP expiration for assets.
  config.action_controller.perform_caching = true
  config.public_file_server.headers = {
    "Cache-Control" => "public, max-age=#{1.year.to_i}"
  }

  # Serve static files from the `/public` folder by the app server.
  # When RAILS_SERVE_STATIC_FILES is set, Rails will serve static assets.
  config.public_file_server.enabled = ENV["RAILS_SERVE_STATIC_FILES"].present?

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Force all access to the app over SSL, use Strict-Transport-Security, and secure cookies.
  config.assume_ssl = true
  config.force_ssl  = true

  # Skip http-to-https redirect for the default health check endpoint.
  # config.ssl_options = { redirect: { exclude: ->(request) { request.path == "/up" } } }

  # Use a tagged logger that prepends request IDs to log lines.
  config.log_tags = [:request_id]
  config.logger   = ActiveSupport::TaggedLogging.new(Logger.new($stdout))

  # Log level – change to debug for more verbosity.
  config.log_level = ENV.fetch("RAILS_LOG_LEVEL", "info").to_sym

  # Prevent health check requests from cluttering logs.
  config.silence_healthcheck_path = "/up"

  # Do not log deprecation warnings in production.
  config.active_support.report_deprecations = false

  # Do not dump the schema after migrations.
  config.active_record.dump_schema_after_migration = false

  # Only include the primary key in object inspections to reduce noise.
  config.active_record.attributes_for_inspect = [:id]

  # Enable locale fallbacks for I18n.
  config.i18n.fallbacks = true

  # Set the host for URLs generated by mailers.
  config.action_mailer.default_url_options = { host: ENV.fetch("APP_HOST", "example.com") }

  # Uncomment and set up SMTP settings if you need outgoing email in production.
  # config.action_mailer.delivery_method = :smtp
  # config.action_mailer.smtp_settings = {
  #   address:              'smtp.example.com',
  #   port:                 587,
  #   user_name:            Rails.application.credentials.dig(:smtp, :username),
  #   password:             Rails.application.credentials.dig(:smtp, :password),
  #   authentication:       :plain,
  #   enable_starttls_auto: true
  # }

  # You can whitelist hosts when using Host header protection.
  # config.hosts << "yourcustomdomain.com"
end
